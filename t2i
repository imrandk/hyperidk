
// Select the input element
var inputElement = document.querySelector('.flex.h-10.rounded-md.border.border-input.bg-background.px-3.py-2.text-sm.ring-offset-background.file\\:border-0.file\\:bg-transparent.file\\:text-sm.file\\:font-medium.placeholder\\:text-muted-foreground.focus-visible\\:outline-none.focus-visible\\:ring-2.focus-visible\\:ring-ring.focus-visible\\:ring-offset-2.disabled\\:cursor-not-allowed.disabled\\:opacity-50.font-light.w-full');

// Select the text inside the input element
inputElement.select();

// Collapse the selection to a single point
inputElement.selectionStart = inputElement.selectionEnd;

// Replace the button with the specified selector
var newElement = document.querySelector('.space-y-1:nth-child(2) > .flex');
newElement.select();


// Function to download all images within the specified area
function downloadImages() {
  // Retrieve processed URLs from local storage or initialize an empty array
  let processedUrls = JSON.parse(localStorage.getItem('processedUrls')) || [];
  
  // Select the container div
  const container = document.querySelector('.w-fit.h-fit.relative');
  
  // Select all img elements within the container
  const images = container.querySelectorAll('img');
  
  // Iterate over each image and initiate the download
  images.forEach(image => {
    const imageUrl = image.src;
    
    // Check if the URL has already been processed
    if (!processedUrls.includes(imageUrl)) {
      const filename = imageUrl.substring(imageUrl.lastIndexOf('/') + 1); // Extract filename from URL
      
      // Create a temporary anchor element to trigger the download
      const link = document.createElement('a');
      link.href = imageUrl;
      link.download = filename;
      link.style.display = 'none';
      
      // Append the anchor element to the document body
      document.body.appendChild(link);
      
      // Trigger the download
      link.click();
      
      // Add the URL to the list of processed URLs
      processedUrls.push(imageUrl);
      
      // Clean up by removing the anchor element
      document.body.removeChild(link);
    }
  });
  
  // Save the updated list of processed URLs to local storage
  localStorage.setItem('processedUrls', JSON.stringify(processedUrls));
}

// Call the function once initially
downloadImages();

// Call the function every 1 seconds
setInterval(downloadImages, 10);
